apiVersion: batch/v1
kind: Job
metadata:
  name: db-migrate
spec:
  template:
    spec:
      containers:
      - name: db-migrate
        image: {{ .Values.image | default "public.ecr.aws/n1b3o1k2/eodhp-web-presence:0.1.12" }}
        imagePullPolicy: Always
        command: [
          "sh",
          "-c",
          "if PGPASSWORD=$SQL_PASSWORD psql -h $SQL_HOST -U $SQL_USER -d $SQL_DATABASE -tAc \"SELECT 1 FROM information_schema.schemata WHERE schema_name = 'dev';\" | grep -q 1; then echo 'Schema already exists'; python manage.py migrate; else echo 'Schema not found. Loading database'; python manage.py migrate; python database_load.py {{ .Values.database.latest_image }}; fi",
        ]
        env:
          - name: SQL_HOST
            value: {{ .Values.database.sql_host | default "postgres-service" }}
          - name: SQL_PORT
            value: {{ .Values.database.sql_port | default "5432" | quote }}
          - name: SQL_DATABASE
            value: {{ .Values.database.sql_database | default "web_presence_db" }}
          - name: SQL_ENGINE
            value: {{ .Values.database.sql_engine | default "django.db.backends.postgresql_psycopg2" }}
          - name: SQL_USER
            value: {{ .Values.database.sql_user | default "admin" }}
          {{- if and (.Values.database.secretKeys.sqlPasswordKey) (.Values.database.existingSecret) }}
          - name: SQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database.existingSecret }}
                key:  {{ .Values.database.secretKeys.sqlPasswordKey }}
          {{- else }}
          - name: SQL_PASSWORD
            value: {{ .Values.database.sql_password | default "password" }}
          {{- end }}
      restartPolicy: OnFailure
  backoffLimit: 10
